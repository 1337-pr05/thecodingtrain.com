{
  "title": "KNN Classification Part 2",
  "description": "This video  series covers \"KNN Classification.\" In this second part, I train the KNN image classifier using the ml5.js library.",
  "videoNumber": "5.2",
  "videoId": "Mwo5_bUVhlA",
  "date": "2019-02-05",
  "languages": ["ml5.js", "p5.js"],
  "topics": ["KNN classification", "machine learning (ML)"],
  "canContribute": true,
  "timestamps": [
    { "time": "0:00", "title": "Introduction" },
    {
      "time": "0:31",
      "title": "Tensors: an object which can house N dimensional data"
    },
    { "time": "1:50", "title": "Create a ml5 model" },
    { "time": "2:34", "title": "KNN classification" },
    { "time": "6:42", "title": "Multi-dimensional inference" },
    { "time": "7:54", "title": "Cosine similarity" },
    { "time": "8:43", "title": "addExample() function" },
    { "time": "9:14", "title": "Let's Code!" },
    { "time": "12:16", "title": "Add an async function GotResult()" },
    { "time": "14:10", "title": "Handle the error" },
    { "time": "14:35", "title": "Train the model" },
    { "time": "15:18", "title": "Distance calculation done in real time" },
    { "time": "17:58", "title": "goClassify function" },
    { "time": "20:20", "title": "What's missing?" }
  ],
  "codeExamples": [
    {
      "title": "KNN classification",
      "description": "This sketch demonstrates how to train the KNN image classifier.",
      "urls": { "p5": "https://editor.p5js.org/codingtrain/sketches/RERqlwJL" }
    }
  ],
  "groupLinks": [
    {
      "title": "References",
      "links": [
        {
          "icon": "ðŸ’»",
          "title": "ml5.js",
          "url": "https://ml5js.org/",
          "description": "ml5 page with documentation and supporting material."
        },
        {
          "icon": "ðŸ’»",
          "title": "Machine Learning for the Web by Yining Shi",
          "url": "https://github.com/yining1023/machine-learning-for-the-web",
          "description": "Yining Shi's page for the \"Machine Learning for the Web\" class at ITP, NYU."
        },
        {
          "icon": "ðŸ““",
          "title": "How to build a Teachable Machine with TensorFlow.js by Nikhil Thorat",
          "url": "https://observablehq.com/@nsthorat/how-to-build-a-teachable-machine-with-tensorflow-js",
          "description": "Article by Nikhil Thorat which explains how Teachable Machine was built."
        },
        {
          "icon": "ðŸ’»",
          "title": "Webcam PacMan",
          "url": "https://storage.googleapis.com/tfjs-examples/webcam-transfer-learning/dist/index.html",
          "description": "Tensorflow.js example of transfer learning with PacMan."
        }
      ]
    },
    {
      "title": "Videos",
      "links": [
        {
          "icon": "ðŸš‚",
          "title": "Beginners Guide to Machine Learning in JavaScript",
          "url": "/tracks/ml5js-beginners-guide",
          "description": "This playlist provides an introduction to developing creative coding projects with machine learning."
        },
        {
          "icon": "ðŸš‚",
          "title": "Nearest Neighbors Recommendation Engine",
          "url": "https://www.youtube.com/watch?v=N8Fabn1om2k&t=0s",
          "description": "In this coding challenge, I create a movie recommendation engine using the a \"nearest neighbor\" algorithm. "
        }
      ]
    }
  ],
  "credits": [
    { "title": "Editing", "name": "Mathieu Blanchette" },
    { "title": "Animations", "name": "Jason Heglund" }
  ]
}
